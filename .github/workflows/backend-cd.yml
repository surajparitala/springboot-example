name: CD- Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.7
        env:
          POSTGRES_USER: surajdb
          POSTGRES_PASSWORD: surajpassword
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        options: 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Building with Maven :maven:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build Package
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image Tag:${{steps.build-number.outputs.BUILD_NUMBER }} to Docker Hub"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update DockerRun AWS JSON File With new Build Number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(surajparitala/springboot-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":" :aws: Starting deployment to Elastic Beanstalk"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deploy to Elastic BeanStalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION}}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 120
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":" :githubloading: Committing to repo :progress_bar: :smile:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
            - name: Send Slack Message
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":" Deployment and commit completed :github_check_mark:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status - ${{ job.status }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
